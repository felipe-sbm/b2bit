{"ast":null,"code":"var _jsxFileName = \"/home/samuel/dev/b2bit/src/pages/Login/index.tsx\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../../contexts/Auth/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n  const auth = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleEmailInput = event => {\n    setEmail(event.target.value);\n  };\n  const handlePasswordInput = event => {\n    setPassword(event.target.value);\n  };\n  const handleLogin = async () => {\n    if (email && password) {\n      const isLogged = await auth.signIn(email, password);\n      if (isLogged) {\n        navigate(\"/\");\n      } else {\n        alert(\"Tem algo de errado aqui bixo, tenta de novo... :/\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"E-mail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: email,\n      onChange: handleEmailInput,\n      placeholder: \"@gmail.com\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: handlePasswordInput,\n      placeholder: \"****************\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"P9ZUmXi4XxhMNTz4gI5Z2P8GcWk=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useContext","useState","useNavigate","AuthContext","jsxDEV","_jsxDEV","Login","_s","auth","navigate","email","setEmail","password","setPassword","handleEmailInput","event","target","value","handlePasswordInput","handleLogin","isLogged","signIn","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/samuel/dev/b2bit/src/pages/Login/index.tsx"],"sourcesContent":["import { ChangeEvent, useContext, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../../contexts/Auth/AuthContext';\n\nexport const Login = () => {\n  const auth = useContext(AuthContext);\n  const navigate = useNavigate();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleEmailInput = (event: ChangeEvent<HTMLInputElement>) => {\n    setEmail(event.target.value);\n  };\n  const handlePasswordInput = (event: ChangeEvent<HTMLInputElement>) => {\n    setPassword(event.target.value);\n  };\n  const handleLogin = async () => {\n    if (email && password) {\n      const isLogged = await auth.signIn(email, password);\n      if (isLogged) { navigate(\"/\"); } else { alert(\"Tem algo de errado aqui bixo, tenta de novo... :/\"); }\n    }\n  };\n\n  return (\n    <div>\n    <p>E-mail</p>\n      <input\n        type=\"text\"\n        value={email}\n        onChange={handleEmailInput}\n        placeholder=\"@gmail.com\"\n      />\n    <p>Password</p>\n      <input\n        type=\"password\"\n        value={password}\n        onChange={handlePasswordInput}\n        placeholder=\"****************\"\n      />\n      <br />\n      <button onClick={handleLogin}>Sign In</button>\n    </div>\n  );\n};\n"],"mappings":";;AAAA,SAAsBA,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACzD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,OAAO,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,IAAI,GAAGR,UAAU,CAACG,WAAW,CAAC;EACpC,MAAMM,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMa,gBAAgB,GAAIC,KAAoC,IAAK;IACjEJ,QAAQ,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EACD,MAAMC,mBAAmB,GAAIH,KAAoC,IAAK;IACpEF,WAAW,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EACD,MAAME,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAIT,KAAK,IAAIE,QAAQ,EAAE;MACrB,MAAMQ,QAAQ,GAAG,MAAMZ,IAAI,CAACa,MAAM,CAACX,KAAK,EAAEE,QAAQ,CAAC;MACnD,IAAIQ,QAAQ,EAAE;QAAEX,QAAQ,CAAC,GAAG,CAAC;MAAE,CAAC,MAAM;QAAEa,KAAK,CAAC,mDAAmD,CAAC;MAAE;IACtG;EACF,CAAC;EAED,oBACEjB,OAAA;IAAAkB,QAAA,gBACAlB,OAAA;MAAAkB,QAAA,EAAG;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACXtB,OAAA;MACEuB,IAAI,EAAC,MAAM;MACXX,KAAK,EAAEP,KAAM;MACbmB,QAAQ,EAAEf,gBAAiB;MAC3BgB,WAAW,EAAC;IAAY;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACJtB,OAAA;MAAAkB,QAAA,EAAG;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACbtB,OAAA;MACEuB,IAAI,EAAC,UAAU;MACfX,KAAK,EAAEL,QAAS;MAChBiB,QAAQ,EAAEX,mBAAoB;MAC9BY,WAAW,EAAC;IAAkB;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACFtB,OAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNtB,OAAA;MAAQ0B,OAAO,EAAEZ,WAAY;MAAAI,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAACpB,EAAA,CAvCWD,KAAK;EAAA,QAECJ,WAAW;AAAA;AAAA8B,EAAA,GAFjB1B,KAAK;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}